y = 1*(x1^2-x2^2 > 0)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
fit = glm(y~x1*x2, data = dat, family = "binomial")
probs = predict(fit, dat, type = "response")
ypred = ifelse(probs<0.5, 0, 1)
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(col = ypred))
print(paste("The prediction error for logistic regression using non-linear functions of the predictors = ", mean(as.numeric(ypred) != as.numeric(dat$y))))
probs = predict(fit, dat, type = "response")
ypred = ifelse(probs<0.5, 0, 1) %>% as.factor()
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(col = ypred))
print(paste("The prediction error for logistic regression using non-linear functions of the predictors = ", mean(as.numeric(ypred) != as.numeric(dat$y))))
fit = glm(y~x1*x2+I(x1^2), data = dat, family = "binomial")
probs = predict(fit, dat, type = "response")
ypred = ifelse(probs<0.5, 0, 1) %>% as.factor()
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(col = ypred))
print(paste("The prediction error for logistic regression using non-linear functions of the predictors = ", mean(as.numeric(ypred) != as.numeric(dat$y))))
fit = svm(y~., data = dat, kernel = "linear")
ypred = fit$fitted %>% as.factor()
dat %>% ggplot(aes(x1,x2))+ geom_point(aes(color = ypred))
print(paste("The prediction error for a support vector classifier = ", mean(as.numeric(ypred) != as.numeric(dat$y))))
tune.out = tune(svm, y~., data = dat, kernel = "linear",
ranges = list(cost = c(0.001, 0.01, 0.1, 1, 10)))
#fit = svm(y~., data = dat, kernel = "linear")
ypred = tune.out$best.model$fitted %>% as.factor()
dat %>% ggplot(aes(x1,x2))+ geom_point(aes(color = ypred))
print(paste("The prediction error for a support vector classifier = ", mean(as.numeric(ypred) != as.numeric(dat$y))))
tune.out = tune(svm, y~., data = dat, kernel = "radial",
ranges = list(cost = c(0.001, 0.01, 0.1, 1, 10),
gamma = c(0.1, 0.33, 0.66, 1)))
ypred = tune.out$best.model$fitted %>% as.factor()
dat %>% ggplot(aes(x1,x2))+ geom_point(aes(color = ypred))
print(paste("The lowest prediction error for a SVM with radial kernel = ", mean(as.numeric(ypred) != as.numeric(dat$y))))
tune.out = tune(svm, y~., data = dat, kernel = "polynomial",
ranges = list(cost = c(0.001, 0.01, 0.1, 1, 10),
gamma = c(0.1, 0.33, 0.66, 1),
degree = c(2, 3, 4)))
ypred = tune.out$best.model$fitted %>% as.factor()
dat %>% ggplot(aes(x1,x2))+ geom_point(aes(color = ypred))
print(paste("The lowest prediction error for a SVM with polynomial kernel = ", mean(as.numeric(ypred) != as.numeric(dat$y))))
set.seed(1970)
x1 = runif(500)-0.5
x2 = runif(500)-0.5
y = 1*(x1+x2 > 0)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
###5.b
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
set.seed(1970)
x1 = runif(500)-0.4
x2 = runif(500)-0.5
y = 1*(x1+x2 > 0)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
###5.b
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
set.seed(1970)
x1 = runif(500)-0.4
x2 = runif(500)-0.4
y = 1*(x1+x2 > 0)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
###5.b
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
set.seed(1970)
x1 = runif(500)-0.5
x2 = runif(500)-0.5
y = 1*(x1+x2 > 0)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
###5.b
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
set.seed(1970)
x1 = runif(500)-0.45
x2 = runif(500)-0.45
y = 1*(x1+x2 > 0)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
###5.b
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
set.seed(1970)
x1 = runif(500)-0.4
x2 = runif(500)-0.4
y = 1*(x1+x2 > 0)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
###5.b
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
set.seed(1970)
x1 = runif(500)-0.4
x2 = runif(500)-0.4
y = 1*(x1+x2 > 1)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
###5.b
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
set.seed(1970)
x1 = runif(500)-0.4
x2 = runif(500)-0.4
y = 1*(x1+x2 > 0.001)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
###5.b
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
set.seed(1970)
x1 = runif(500)-0.4
x2 = runif(500)-0.4
y = 1*(x1+x2 > 0.01)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
###5.b
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
set.seed(1970)
x1 = runif(500)-0.5
x2 = runif(500)-0.5
y = 1*(x1+x2 > 0.01)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
###5.b
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y
set.seed(1970)
x1 = runif(500)-0.5
x2 = runif(500)-0.5
y = 1*(x1+x2 > 0.001)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
###5.b
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
set.seed(1970)
x1 = runif(50)-0.5
x2 = runif(50)-0.5
y = 1*(x1+x2 > 0.001)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
###5.b
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
set.seed(1970)
x1 = runif(150)-0.5
x2 = runif(150)-0.5
y = 1*(x1+x2 > 0.001)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
###5.b
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
set.seed(1970)
x1 = runif(150)-0.5
x2 = runif(150)-0.5
y = 1*(x1+x2 > 0.01)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
###5.b
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
q()
getwd()
setwd("C:/Users/Sanjeev/Desktop/R/ISLR/ISLR-Exercises/Chapter-9")
knitr::opts_chunk$set(echo = TRUE)
library(e1071)
library(dplyr)
library(ggplot2)
set.seed(1970)
x1 = runif(150)-0.5
x2 = runif(150)-0.5
y = 1*(x1+x2 > 0.01)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
train = sample(nrow(dat), nrow(dat)*0.75)
x = tune(svm, data = dat[train,], kernel = "linear",
ranges = list(cost = c(0.1,1)))
x = tune(svm, y~., data = dat[train,], kernel = "linear",
ranges = list(cost = c(0.1,1)))
rm(x)
fit = svm(y~., data = dat, subset = train, kernel = "linear", cost = 1)
obs.misclass = rep(0, length(cost))
cost = c(0.001, 0.01, 0.1, 1, 10, 100, 1000)
obs.misclass = rep(0, length(cost))
misclass = sum(fit$fitted != dat$y[train])
fit = tune(svm, y~., data = dat[train,], kernel = "linear", cost = 0.1)
misclass = c(fit$performances$error, sum(fit$best.model$fitted != dat$y[train,]))
misclass = c(fit$performances$error, sum(fit$best.model$fitted != dat$y[train]))
comp = function(c){
fit = tune(svm, y~., data = dat[train,], kernel = "linear", cost = c)
misclass = c(fit$performances$error, sum(fit$best.model$fitted != dat$y[train]))
return(misclass)
}
compare.table = comp(cost)
compare.table = sapply(cost, comp)
View(compare.table)
compare.table = sapply(cost, comp) %>% t()
View(compare.table)
View(compare.table)
compare.table = sapply(cost, comp) #%>% t()
View(compare.table)
?t()
compare.table = sapply(cost, comp) %>% t()
View(compare.table)
data.frame(cost = cost, cv.error = compare.table[,1], no.of.misclass = compare.table[,2])
fit = svm(y~., data = dat[train,], kernel = "linear", cost = 1)
pred = predict(fit, dat[-train,])
misclass = sum(pred != dat$y[train])
misclass = sum(pred != dat$y[-train])
misclass = sum(pred != dat$y[-train])
comp.test = function(c){
fit = svm(y~., data = dat[train,], kernel = "linear", cost = c)
pred = predict(fit, dat[-train,])
misclass = sum(pred != dat$y[-train])
return(misclass)
}
compare.table.test = sapply(cost, comp.test)
data.frame(cost = cost, no.of.misclass = compare.table.test)
set.seed(1970)
x1 = runif(500)-0.5
x2 = runif(500)-0.5
y = 1*(x1+x2 > 0.01)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
train = sample(nrow(dat), nrow(dat)*.75)
cost = c(0.001, 0.01, 0.1, 1, 10, 100, 1000)
comp.train = function(c){
fit = tune(svm, y~., data = dat[train,], kernel = "linear", cost = c)
misclass = c(fit$performances$error, sum(fit$best.model$fitted != dat$y[train]))
return(misclass)
}
compare.table.train = sapply(cost, comp) %>% t()
data.frame(cost = cost, cv.error = compare.table[,1], no.of.misclass = compare.table[,2])
comp.test = function(c){
fit = svm(y~., data = dat[train,], kernel = "linear", cost = c)
pred = predict(fit, dat[-train,])
misclass = sum(pred != dat$y[-train])
return(misclass)
}
compare.table.test = sapply(cost, comp.test)
data.frame(cost = cost, no.of.misclass = compare.table.test)
set.seed(1970)
x1 = runif(500)-0.5
x2 = runif(500)-0.5
y = 1*(x1+x2 > 0)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
set.seed(1970)
x1 = runif(500)-0.5
x2 = runif(500)-0.5
y = 1*(x1+x2 > -0.0001)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
train = sample(nrow(dat), nrow(dat)*.75)
cost = c(0.001, 0.01, 0.1, 1, 10, 100, 1000)
comp.train = function(c){
fit = tune(svm, y~., data = dat[train,], kernel = "linear", cost = c)
misclass = c(fit$performances$error, sum(fit$best.model$fitted != dat$y[train]))
return(misclass)
}
compare.table.train = sapply(cost, comp) %>% t()
data.frame(cost = cost, cv.error = compare.table[,1], no.of.misclass = compare.table[,2])
comp.test = function(c){
fit = svm(y~., data = dat[train,], kernel = "linear", cost = c)
pred = predict(fit, dat[-train,])
misclass = sum(pred != dat$y[-train])
return(misclass)
}
compare.table.test = sapply(cost, comp.test)
data.frame(cost = cost, no.of.misclass = compare.table.test)
set.seed(1970)
x1 = runif(500)-0.5
x2 = runif(500)-0.5
y = 1*(x1+x2 > 0)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
train = sample(nrow(dat), nrow(dat)*.75)
cost = c(0.001, 0.01, 0.1, 1, 10, 100, 1000)
comp.train = function(c){
fit = tune(svm, y~., data = dat[train,], kernel = "linear", cost = c)
misclass = c(fit$performances$error, sum(fit$best.model$fitted != dat$y[train]))
return(misclass)
}
compare.table.train = sapply(cost, comp) %>% t()
data.frame(cost = cost, cv.error = compare.table[,1], no.of.misclass = compare.table[,2])
comp.test = function(c){
fit = svm(y~., data = dat[train,], kernel = "linear", cost = c)
pred = predict(fit, dat[-train,])
misclass = sum(pred != dat$y[-train])
return(misclass)
}
compare.table.test = sapply(cost, comp.test)
data.frame(cost = cost, no.of.misclass = compare.table.test)
set.seed(1970)
x1 = runif(500)-0.5
x2 = runif(500)-0.5
y = 1*(x1+x2 > 0)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
train = sample(nrow(dat), nrow(dat)*.75)
cost = c(0.001, 0.01, 0.1, 1, 10, 100, 1000)
comp.train = function(c){
fit = tune(svm, y~., data = dat[train,], kernel = "linear", cost = c)
misclass = c(fit$performances$error, sum(fit$best.model$fitted != dat$y[train]))
return(misclass)
}
compare.table.train = sapply(cost, comp) %>% t()
train = sample(nrow(dat), nrow(dat)*.75)
cost = c(0.001, 0.01, 0.1, 1, 10, 100, 1000)
comp.train = function(c){
fit = tune(svm, y~., data = dat[train,], kernel = "linear", cost = c)
misclass = c(fit$performances$error, sum(fit$best.model$fitted != dat$y[train]))
return(misclass)
}
compare.table.train = sapply(cost, comp.train) %>% t()
data.frame(cost = cost, cv.error = compare.table.train[,1], no.of.misclass = compare.table.train[,2])
set.seed(1970)
x1 = runif(500)-0.5
x2 = runif(500)-0.5
y = 1*(x1+x2 > 0)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
set.seed(1970)
train = sample(nrow(dat), nrow(dat)*.75)
cost = c(0.001, 0.01, 0.1, 1, 10, 100, 1000)
comp.train = function(c){
fit = tune(svm, y~., data = dat[train,], kernel = "linear", cost = c)
misclass = c(fit$performances$error, sum(fit$best.model$fitted != dat$y[train]))
return(misclass)
}
compare.table.train = sapply(cost, comp.train) %>% t()
data.frame(cost = cost, cv.error = compare.table.train[,1], no.of.misclass = compare.table.train[,2])
comp.test = function(c){
fit = svm(y~., data = dat[train,], kernel = "linear", cost = c)
pred = predict(fit, dat[-train,])
misclass = sum(pred != dat$y[-train])
return(misclass)
}
compare.table.test = sapply(cost, comp.test)
data.frame(cost = cost, no.of.misclass = compare.table.test)
set.seed(1970)
x1 = runif(500)-0.5
x2 = runif(500)-0.5
y = 1*(x1+x2 < -0.01)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
set.seed(1970)
x1 = runif(500)-0.5
x2 = runif(500)-0.5
y = 1*(x1+x2 > -0.01)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
set.seed(1970)
x1 = runif(500)-0.5
x2 = runif(500)-0.5
y = 1*(x1+x2 > -0.1)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
set.seed(1970)
x1 = runif(500)-0.5
x2 = runif(500)-0.5
y = 1*(x1+x2 < -0.1)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
set.seed(1970)
x1 = runif(500)-0.5
x2 = runif(500)-0.5
y = 1*(x1+x2 < 0.5)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
set.seed(1970)
x1 = runif(500)-0.5
x2 = runif(500)-0.6
y = 1*(x1+x2 > 0)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
set.seed(1970)
x1 = runif(500)-0.55
x2 = runif(500)-0.6
y = 1*(x1+x2 > 0)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
set.seed(1970)
train = sample(nrow(dat), nrow(dat)*.75)
cost = c(0.001, 0.01, 0.1, 1, 10, 100, 1000)
comp.train = function(c){
fit = tune(svm, y~., data = dat[train,], kernel = "linear", cost = c)
misclass = c(fit$performances$error, sum(fit$best.model$fitted != dat$y[train]))
return(misclass)
}
compare.table.train = sapply(cost, comp.train) %>% t()
data.frame(cost = cost, cv.error = compare.table.train[,1], no.of.misclass = compare.table.train[,2])
comp.test = function(c){
fit = svm(y~., data = dat[train,], kernel = "linear", cost = c)
pred = predict(fit, dat[-train,])
misclass = sum(pred != dat$y[-train])
return(misclass)
}
compare.table.test = sapply(cost, comp.test)
data.frame(cost = cost, no.of.misclass = compare.table.test)
set.seed(1970)
x1 = runif(500)
x2 = runif(500)-0.6
y = 1*(x1+x2 > 0)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
set.seed(1970)
x1 = runif(500)
x2 = runif(500)-0.001
y = 1*(x1+x2 > 0)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
set.seed(1970)
x1 = runif(500)
x2 = runif(500)-0.01
y = 1*(x1+x2 > 0)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
set.seed(1970)
x1 = runif(500)
x2 = runif(500)
y = 1*(x1+x2 > 0)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
set.seed(1970)
x1 = runif(500)
x2 = runif(500)
y = 1*(x1+x2 > 0.5)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
set.seed(1970)
x1 = runif(500)
x2 = runif(500)
y = 1*(x1+x2 > 0.25)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
set.seed(1970)
x1 = runif(500)
x2 = runif(500)
y = 1*(x1+x2 > 0.75)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
set.seed(1970)
x1 = runif(500)
x2 = runif(500)
y = 1*(x1+x2 > 0.8)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
set.seed(1970)
x1 = runif(500)
x2 = runif(500)-0.5
y = 1*(x1+x2 > 0.8)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
set.seed(1970)
x1 = runif(500)
x2 = runif(500)-0.5
y = 1*(x1+x2 > 0.5)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
set.seed(1970)
x1 = runif(500)
x2 = runif(500)-0.5
y = 1*(x1+x2 > 0.5)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
set.seed(1970)
x1 = runif(500)-0.5
x2 = runif(500)-0.5
y = 1*(x1+x2 > 0.5)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
set.seed(1970)
x1 = runif(500)-0.5
x2 = runif(500)-0.5
y = 1*(x1+x2 > 0)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
set.seed(1970)
x1 = runif(500)-0.5
x2 = runif(500)-0.5
y = 1*(0.5*x1+x2 > 0)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
set.seed(1970)
x1 = runif(500)-0.5
x2 = runif(500)-0.5
y = 1*(0.25*x1+x2 > 0)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
set.seed(1970)
train = sample(nrow(dat), nrow(dat)*.75)
cost = c(0.001, 0.01, 0.1, 1, 10, 100, 1000)
comp.train = function(c){
fit = tune(svm, y~., data = dat[train,], kernel = "linear", cost = c)
misclass = c(fit$performances$error, sum(fit$best.model$fitted != dat$y[train]))
return(misclass)
}
compare.table.train = sapply(cost, comp.train) %>% t()
data.frame(cost = cost, cv.error = compare.table.train[,1], no.of.misclass = compare.table.train[,2])
comp.test = function(c){
fit = svm(y~., data = dat[train,], kernel = "linear", cost = c)
pred = predict(fit, dat[-train,])
misclass = sum(pred != dat$y[-train])
return(misclass)
}
compare.table.test = sapply(cost, comp.test)
data.frame(cost = cost, no.of.misclass = compare.table.test)
data.frame(cost = cost, test.dat.misclass = compare.table.test)
data.frame(cost = cost, train.cv.error = compare.table.train[,1], train.dat.misclass = compare.table.train[,2])
set.seed(1970)
x1 = runif(500)-0.5
x2 = runif(500)-0.5
y = 1*(0.25*x1+x2 > 0)
dat = data.frame(x1=x1, x2=x2, y=as.factor(y))
dat %>% ggplot(aes(x1, x2))+ geom_point(aes(color = y))
set.seed(1970)
train = sample(nrow(dat), nrow(dat)*.75)
cost = c(0.001, 0.01, 0.1, 1, 10, 100, 1000)
comp.train = function(c){
fit = tune(svm, y~., data = dat[train,], kernel = "linear", cost = c)
misclass = c(fit$performances$error, sum(fit$best.model$fitted != dat$y[train]))
return(misclass)
}
compare.table.train = sapply(cost, comp.train) %>% t()
data.frame(cost = cost, train.cv.error = compare.table.train[,1], train.dat.misclass = compare.table.train[,2])
comp.test = function(c){
fit = svm(y~., data = dat[train,], kernel = "linear", cost = c)
pred = predict(fit, dat[-train,])
misclass = sum(pred != dat$y[-train])
return(misclass)
}
compare.table.test = sapply(cost, comp.test)
data.frame(cost = cost, test.dat.misclass = compare.table.test)
q()
q()
